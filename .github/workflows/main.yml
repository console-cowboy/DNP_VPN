name: "Main"
on:
  pull_request:
    paths:
      - "build/**"
      - ".github/workflows/main.yml"
  push:
    branches:
      - "master"
      - "v[0-9]+.[0-9]+.[0-9]+"
    paths:
      - "build/**"

jobs:
  unit-test:
    runs-on: ubuntu-16.04
    name: Tests
    env:
      working-directory: ./build/src
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "10.x"
      - run: yarn install
        working-directory: ${{ env.working-directory }}
      - run: yarn lint
        working-directory: ${{ env.working-directory }}
      - run: yarn test
        working-directory: ${{ env.working-directory }}

  openvpn-test:
    runs-on: ubuntu-16.04
    name: OpenVPN test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build image with test files
        run: docker build -t int-test -f build/src/test/Dockerfile.test.int .
      - name: Run containerized tests
        run: docker run int-test
      - run: docker-compose build
      - name: Compile integration test
        working-directory: build/src
        run: |
          yarn install
          tsc test/client.test.int.ts
      - name: Run dockerized integration test
        run: |
          docker run -d --name test $(docker images vpn.dnp.dappnode.eth -q) sleep 1000
          docker cp build/src/ test:/usr/src/app

          docker cp build/src/test/client.test.int.js test:/usr/src/app
          docker exec test apk add yarn
          docker exec test yarn add mocha chai
          docker exec test node_modules/.bin/mocha client.test.int.js

  build-test:
    runs-on: ubuntu-16.04
    name: Build test
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - run: docker-compose build

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [unit-test]
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "10.x"
      - name: Publish
        run: npx @dappnode/dappnodesdk publish patch --dappnode_team_preset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
